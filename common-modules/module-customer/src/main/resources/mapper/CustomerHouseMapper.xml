<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Newcity.module.customer.dao.CustomerHouseMapper" >
  <resultMap id="BaseResultMap" type="com.Newcity.module.customer.entity.CustomerHouse" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="house_id" property="houseId" jdbcType="BIGINT" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="payment_state" property="paymentState" jdbcType="INTEGER" />
    <result column="contract_state" property="contractState" jdbcType="INTEGER" />
    <result column="payment_way" property="paymentWay" jdbcType="VARCHAR" />
    <result column="loan_amount" property="loanAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="modification_time" property="modificationTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, house_id, customer_id, payment_state, contract_state, payment_way, loan_amount, 
    create_time, operator, is_delete, modification_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from customer_house
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from customer_house
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.Newcity.module.customer.entity.CustomerHouse" >
    insert into customer_house (id, house_id, customer_id, 
      payment_state, contract_state, payment_way, 
      loan_amount, create_time, operator, 
      is_delete, modification_time)
    values (#{id,jdbcType=BIGINT}, #{houseId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, 
      #{paymentState,jdbcType=INTEGER}, #{contractState,jdbcType=INTEGER}, #{paymentWay,jdbcType=VARCHAR}, 
      #{loanAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=BIT}, #{modificationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.Newcity.module.customer.entity.CustomerHouse" >
    insert into customer_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="paymentState != null" >
        payment_state,
      </if>
      <if test="contractState != null" >
        contract_state,
      </if>
      <if test="paymentWay != null" >
        payment_way,
      </if>
      <if test="loanAmount != null" >
        loan_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="modificationTime != null" >
        modification_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="paymentState != null" >
        #{paymentState,jdbcType=INTEGER},
      </if>
      <if test="contractState != null" >
        #{contractState,jdbcType=INTEGER},
      </if>
      <if test="paymentWay != null" >
        #{paymentWay,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null" >
        #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="modificationTime != null" >
        #{modificationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Newcity.module.customer.entity.CustomerHouse" >
    update customer_house
    <set >
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="paymentState != null" >
        payment_state = #{paymentState,jdbcType=INTEGER},
      </if>
      <if test="contractState != null" >
        contract_state = #{contractState,jdbcType=INTEGER},
      </if>
      <if test="paymentWay != null" >
        payment_way = #{paymentWay,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null" >
        loan_amount = #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="modificationTime != null" >
        modification_time = #{modificationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Newcity.module.customer.entity.CustomerHouse" >
    update customer_house
    set house_id = #{houseId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      payment_state = #{paymentState,jdbcType=INTEGER},
      contract_state = #{contractState,jdbcType=INTEGER},
      payment_way = #{paymentWay,jdbcType=VARCHAR},
      loan_amount = #{loanAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      modification_time = #{modificationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>